version: "2.1"
services:
  opbeans-go:
    build: .
    image: opbeans/opbeans-go:latest
    ports:
      - "127.0.0.1:${OPBEANS_GO_PORT:-8000}:8000"
    container_name: opbeans-go
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    environment:
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      - ELASTIC_APM_JS_SERVER_URL=${ELASTIC_APM_JS_SERVER_URL:-http://localhost:8200}
      - ELASTIC_APM_SECRET_TOKEN=${ELASTIC_APM_SECRET_TOKEN}
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=hunter2
      - PGDATABASE=opbeans
      - PGSSLMODE=disable
      - ELASTIC_APM_LOG_FILE=stderr
      - ELASTIC_APM_LOG_LEVEL=debug
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_started
    command:
      - "/opbeans-go"
      - "-log-level=debug"
      - "-log-json"
      - "-listen=:${OPBEANS_GO_PORT:-8000}"
      - "-frontend=/opbeans-frontend"
      - "-db=postgres:"
      - "-cache=redis://redis:6379"

  redis:
    image: redis:4
    ports:
      - 6379:6379
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=hunter2
      - POSTGRES_DB=opbeans
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  wait:
    image: busybox
    depends_on:
      opbeans-go:
        condition: service_healthy
      
volumes:
  esdata:
    driver: local
  opbeansdb:
    driver: local
  pgdata:
    driver: local
